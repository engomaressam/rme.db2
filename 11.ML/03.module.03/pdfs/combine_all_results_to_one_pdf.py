import os
from PyPDF2 import PdfMerger
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas

# List of (pdf filename, cover title, cover details)
sections = [
    ("03a_simple1hiddenlayer.pdf", "03a_simple1hiddenlayer.py (Original)",
     "Simple 1-hidden-layer NN\nData: X in [-20, 20], H=2, SGD, 1000 epochs, Cross-Entropy\nPyTorch, manual_seed=0"),
    ("03a_simple1hiddenlayer_rev02.pdf", "03a_simple1hiddenlayer_rev02.py (rev.02)",
     "Simple 1-hidden-layer NN\nData: X in [-30, 30], H=4, Adam, 800 epochs, Cross-Entropy\nPyTorch, manual_seed=42"),
    ("03b_multiple_neurons.pdf", "03b_multiple_neurons.py (Original)",
     "More hidden neurons\nData: X in [-20, 20], H=2, SGD, 1000 epochs, Cross-Entropy\nPyTorch, manual_seed=0"),
    ("03b_multiple_neurons_rev02.pdf", "03b_multiple_neurons_rev02.py (rev.02)",
     "More hidden neurons\nData: X in [-10, 10], H=5, Adam, 600 epochs, Cross-Entropy\nPyTorch, manual_seed=123"),
    ("03c_xor_v2.pdf", "03c_xor_v2.py (Original)",
     "Noisy XOR, 1/2/3 neurons\nData: N=100, SGD, 500 epochs, BCELoss\nPyTorch, manual_seed=0"),
    ("03c_xor_v2_rev02.pdf", "03c_xor_v2_rev02.py (rev.02)",
     "Noisy XOR, 1/2/3 neurons\nData: N=200, Adam, 300 epochs, BCELoss, batch=4\nPyTorch, manual_seed=99"),
    ("03d_one_layer_neural_network_MNIST.pdf", "03d_one_layer_neural_network_MNIST.py (Original)",
     "MNIST, 1 hidden layer\nH=50, SGD, 2 epochs, CrossEntropyLoss\nPyTorch, manual_seed=0"),
    ("03d_one_layer_neural_network_MNIST_rev02.pdf", "03d_one_layer_neural_network_MNIST_rev02.py (rev.02)",
     "MNIST, 1 hidden layer\nH=128, Adam, 3 epochs, CrossEntropyLoss\nPyTorch, manual_seed=2024"),
    ("03e_activationfuction_v2.pdf", "03e_activationfuction_v2.py (Original)",
     "Activation functions: Sigmoid, Tanh, ReLU\nData: z in [-5, 5], manual_seed=2"),
    ("03e_activationfuction_v2_rev02.pdf", "03e_activationfuction_v2_rev02.py (rev.02)",
     "Activation functions: Sigmoid, Tanh, ReLU, LeakyReLU\nData: z in [-10, 10], manual_seed=2025"),
    ("03f_mist1layer_v2.pdf", "03f_mist1layer_v2.py (Original)",
     "MNIST, test activations\nH=50, SGD, 2 epochs, CrossEntropyLoss\nActivations: Sigmoid, Tanh, ReLU\nPyTorch, manual_seed=0"),
    ("03f_mist1layer_v2_rev02.pdf", "03f_mist1layer_v2_rev02.py (rev.02)",
     "MNIST, test activations\nH=64, Adam, 2 epochs, CrossEntropyLoss\nActivations: ReLU, Sigmoid, Tanh\nPyTorch, manual_seed=2026"),
]

pdf_dir = os.path.dirname(os.path.abspath(__file__))
output_pdf = os.path.join(pdf_dir, "all_results_combined.pdf")
cover_dir = os.path.join(pdf_dir, "_covers")
os.makedirs(cover_dir, exist_ok=True)

# Generate cover pages
cover_pdfs = []
for fname, title, details in sections:
    cover_path = os.path.join(cover_dir, fname.replace(".pdf", "_cover.pdf"))
    c = canvas.Canvas(cover_path, pagesize=A4)
    c.setFont("Helvetica-Bold", 24)
    c.drawCentredString(A4[0]/2, A4[1]-120, title)
    c.setFont("Helvetica", 14)
    text = c.beginText(70, A4[1]-180)
    for line in details.split("\n"):
        text.textLine(line)
    c.drawText(text)
    c.setFont("Helvetica-Oblique", 10)
    c.drawString(70, 60, f"Generated by combine_all_results_to_one_pdf.py")
    c.save()
    cover_pdfs.append(cover_path)

# Merge all
merger = PdfMerger()
for (fname, _, _), cover_pdf in zip(sections, cover_pdfs):
    merger.append(cover_pdf)
    merger.append(os.path.join(pdf_dir, fname))
merger.write(output_pdf)
merger.close()
print(f"Combined PDF created: {output_pdf}") 